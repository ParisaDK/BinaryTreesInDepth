//Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        
        TreeNode *node = root;
        if( root == NULL || root == q || root == p) return root;

        TreeNode *left = lowestCommonAncestor(node->left, p, q);
        TreeNode *right = lowestCommonAncestor(node->right, p, q);

        if(left && right) return node;
        else if(left) return left;
        else if(right) return right;

        return NULL;
    }
};

